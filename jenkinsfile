pipeline {
  agent {
    docker {
      image 'node:10-alpine'
      args '-p 20001-20100:8000'
    }
  }
  environment {
    CI = 'true'
    HOME = '.'
    npm_config_cache = 'npm-cache'
  }
  stages {
       stage("check out") {
            steps {
                checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [
                    [name: '*/master']
                    ], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [
                    [url: 'https://github.com/Balamurugan1992/node-hello.git']
                ]]
            }
        }
    stage('Install Packages') {
      steps {
        sh 'npm install'
      }
    }
    stage('Deployment') {
      parallel {
        stage('Staging') {
          when {
            branch 'staging'
          }
          steps {
            withAWS(region:'ap-south-1',credentials:'aws_key') {
              s3Delete(bucket: 'nodebuckett', path:'**/*')
              s3Upload(bucket: 'nodebuckett', workingDir:'build', includePathPattern:'**/*');
            }
            mail(subject: 'Staging Build', body: 'New Deployment to Staging', to: 'jenkins-mailing-list@mail.com')
          }
        }
        stage('Production') {
          when {
            branch 'master'
          }
          steps {
            withAWS(region:'ap-south-1',credentials:'aws_key') {
              s3Delete(bucket: 'nodebuckett', path:'**/*')
              s3Upload(bucket: 'nodebuckett', workingDir:'build', includePathPattern:'**/*');
            }
            mail(subject: 'Production Build', body: 'New Deployment to Production', to: 'developeremail@mail.com')
          }
        }
      }
    }
  }
}
